// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file blockchain_specific.proto (package keysign, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file blockchain_specific.proto.
 */
export const file_blockchain_specific: GenFile = /*@__PURE__*/
  fileDesc("ChlibG9ja2NoYWluX3NwZWNpZmljLnByb3RvEgdrZXlzaWduIjkKDFVUWE9TcGVjaWZpYxIQCghieXRlX2ZlZRgBIAEoCRIXCg9zZW5kX21heF9hbW91bnQYAiABKAgiZwoQRXRoZXJldW1TcGVjaWZpYxIbChNtYXhfZmVlX3Blcl9nYXNfd2VpGAEgASgJEhQKDHByaW9yaXR5X2ZlZRgCIAEoCRINCgVub25jZRgDIAEoAxIRCglnYXNfbGltaXQYBCABKAkiXgoRVEhPUkNoYWluU3BlY2lmaWMSFgoOYWNjb3VudF9udW1iZXIYASABKAQSEAoIc2VxdWVuY2UYAiABKAQSCwoDZmVlGAMgASgEEhIKCmlzX2RlcG9zaXQYBCABKAgiUQoRTUFZQUNoYWluU3BlY2lmaWMSFgoOYWNjb3VudF9udW1iZXIYASABKAQSEAoIc2VxdWVuY2UYAiABKAQSEgoKaXNfZGVwb3NpdBgDIAEoCCJ7Cg5Db3Ntb3NTcGVjaWZpYxIWCg5hY2NvdW50X251bWJlchgBIAEoBBIQCghzZXF1ZW5jZRgCIAEoBBILCgNnYXMYAyABKAQSMgoQdHJhbnNhY3Rpb25fdHlwZRgEIAEoDjIYLmtleXNpZ24uVHJhbnNhY3Rpb25UeXBlItkBCg5Tb2xhbmFTcGVjaWZpYxIZChFyZWNlbnRfYmxvY2tfaGFzaBgBIAEoCRIUCgxwcmlvcml0eV9mZWUYAiABKAkSKgodZnJvbV90b2tlbl9hc3NvY2lhdGVkX2FkZHJlc3MYAyABKAlIAIgBARIoCht0b190b2tlbl9hc3NvY2lhdGVkX2FkZHJlc3MYBCABKAlIAYgBAUIgCh5fZnJvbV90b2tlbl9hc3NvY2lhdGVkX2FkZHJlc3NCHgocX3RvX3Rva2VuX2Fzc29jaWF0ZWRfYWRkcmVzcyKjAQoQUG9sa2Fkb3RTcGVjaWZpYxIZChFyZWNlbnRfYmxvY2tfaGFzaBgBIAEoCRINCgVub25jZRgCIAEoBBIcChRjdXJyZW50X2Jsb2NrX251bWJlchgDIAEoCRIUCgxzcGVjX3ZlcnNpb24YBCABKA0SGwoTdHJhbnNhY3Rpb25fdmVyc2lvbhgFIAEoDRIUCgxnZW5lc2lzX2hhc2gYBiABKAkiLgoQQ29pbktleVZhbHVlUGFpchILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkiYwoLU3VpU3BlY2lmaWMSGwoTcmVmZXJlbmNlX2dhc19wcmljZRgBIAEoCRI3ChRjb2luX2tleV92YWx1ZV9wYWlycxgCIAMoCzIZLmtleXNpZ24uQ29pbktleVZhbHVlUGFpciptCg9UcmFuc2FjdGlvblR5cGUSIAocVFJBTlNBQ1RJT05fVFlQRV9VTlNQRUNJRklFRBAAEhkKFVRSQU5TQUNUSU9OX1RZUEVfVk9URRABEh0KGVRSQU5TQUNUSU9OX1RZUEVfUFJPUE9TQUwQAmIGcHJvdG8z");

/**
 * @generated from message keysign.UTXOSpecific
 */
export type UTXOSpecific = Message<"keysign.UTXOSpecific"> & {
  /**
   * @generated from field: string byte_fee = 1;
   */
  byteFee: string;

  /**
   * @generated from field: bool send_max_amount = 2;
   */
  sendMaxAmount: boolean;
};

/**
 * Describes the message keysign.UTXOSpecific.
 * Use `create(UTXOSpecificSchema)` to create a new message.
 */
export const UTXOSpecificSchema: GenMessage<UTXOSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 0);

/**
 * @generated from message keysign.EthereumSpecific
 */
export type EthereumSpecific = Message<"keysign.EthereumSpecific"> & {
  /**
   * @generated from field: string max_fee_per_gas_wei = 1;
   */
  maxFeePerGasWei: string;

  /**
   * @generated from field: string priority_fee = 2;
   */
  priorityFee: string;

  /**
   * @generated from field: int64 nonce = 3;
   */
  nonce: bigint;

  /**
   * @generated from field: string gas_limit = 4;
   */
  gasLimit: string;
};

/**
 * Describes the message keysign.EthereumSpecific.
 * Use `create(EthereumSpecificSchema)` to create a new message.
 */
export const EthereumSpecificSchema: GenMessage<EthereumSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 1);

/**
 * @generated from message keysign.THORChainSpecific
 */
export type THORChainSpecific = Message<"keysign.THORChainSpecific"> & {
  /**
   * @generated from field: uint64 account_number = 1;
   */
  accountNumber: bigint;

  /**
   * @generated from field: uint64 sequence = 2;
   */
  sequence: bigint;

  /**
   * @generated from field: uint64 fee = 3;
   */
  fee: bigint;

  /**
   * @generated from field: bool is_deposit = 4;
   */
  isDeposit: boolean;
};

/**
 * Describes the message keysign.THORChainSpecific.
 * Use `create(THORChainSpecificSchema)` to create a new message.
 */
export const THORChainSpecificSchema: GenMessage<THORChainSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 2);

/**
 * @generated from message keysign.MAYAChainSpecific
 */
export type MAYAChainSpecific = Message<"keysign.MAYAChainSpecific"> & {
  /**
   * @generated from field: uint64 account_number = 1;
   */
  accountNumber: bigint;

  /**
   * @generated from field: uint64 sequence = 2;
   */
  sequence: bigint;

  /**
   * @generated from field: bool is_deposit = 3;
   */
  isDeposit: boolean;
};

/**
 * Describes the message keysign.MAYAChainSpecific.
 * Use `create(MAYAChainSpecificSchema)` to create a new message.
 */
export const MAYAChainSpecificSchema: GenMessage<MAYAChainSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 3);

/**
 * @generated from message keysign.CosmosSpecific
 */
export type CosmosSpecific = Message<"keysign.CosmosSpecific"> & {
  /**
   * @generated from field: uint64 account_number = 1;
   */
  accountNumber: bigint;

  /**
   * @generated from field: uint64 sequence = 2;
   */
  sequence: bigint;

  /**
   * @generated from field: uint64 gas = 3;
   */
  gas: bigint;

  /**
   * @generated from field: keysign.TransactionType transaction_type = 4;
   */
  transactionType: TransactionType;
};

/**
 * Describes the message keysign.CosmosSpecific.
 * Use `create(CosmosSpecificSchema)` to create a new message.
 */
export const CosmosSpecificSchema: GenMessage<CosmosSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 4);

/**
 * @generated from message keysign.SolanaSpecific
 */
export type SolanaSpecific = Message<"keysign.SolanaSpecific"> & {
  /**
   * @generated from field: string recent_block_hash = 1;
   */
  recentBlockHash: string;

  /**
   * @generated from field: string priority_fee = 2;
   */
  priorityFee: string;

  /**
   * @generated from field: optional string from_token_associated_address = 3;
   */
  fromTokenAssociatedAddress?: string;

  /**
   * @generated from field: optional string to_token_associated_address = 4;
   */
  toTokenAssociatedAddress?: string;
};

/**
 * Describes the message keysign.SolanaSpecific.
 * Use `create(SolanaSpecificSchema)` to create a new message.
 */
export const SolanaSpecificSchema: GenMessage<SolanaSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 5);

/**
 * @generated from message keysign.PolkadotSpecific
 */
export type PolkadotSpecific = Message<"keysign.PolkadotSpecific"> & {
  /**
   * @generated from field: string recent_block_hash = 1;
   */
  recentBlockHash: string;

  /**
   * @generated from field: uint64 nonce = 2;
   */
  nonce: bigint;

  /**
   * @generated from field: string current_block_number = 3;
   */
  currentBlockNumber: string;

  /**
   * @generated from field: uint32 spec_version = 4;
   */
  specVersion: number;

  /**
   * @generated from field: uint32 transaction_version = 5;
   */
  transactionVersion: number;

  /**
   * @generated from field: string genesis_hash = 6;
   */
  genesisHash: string;
};

/**
 * Describes the message keysign.PolkadotSpecific.
 * Use `create(PolkadotSpecificSchema)` to create a new message.
 */
export const PolkadotSpecificSchema: GenMessage<PolkadotSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 6);

/**
 * @generated from message keysign.CoinKeyValuePair
 */
export type CoinKeyValuePair = Message<"keysign.CoinKeyValuePair"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message keysign.CoinKeyValuePair.
 * Use `create(CoinKeyValuePairSchema)` to create a new message.
 */
export const CoinKeyValuePairSchema: GenMessage<CoinKeyValuePair> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 7);

/**
 * @generated from message keysign.SuiSpecific
 */
export type SuiSpecific = Message<"keysign.SuiSpecific"> & {
  /**
   * @generated from field: string reference_gas_price = 1;
   */
  referenceGasPrice: string;

  /**
   * @generated from field: repeated keysign.CoinKeyValuePair coin_key_value_pairs = 2;
   */
  coinKeyValuePairs: CoinKeyValuePair[];
};

/**
 * Describes the message keysign.SuiSpecific.
 * Use `create(SuiSpecificSchema)` to create a new message.
 */
export const SuiSpecificSchema: GenMessage<SuiSpecific> = /*@__PURE__*/
  messageDesc(file_blockchain_specific, 8);

/**
 * @generated from enum keysign.TransactionType
 */
export enum TransactionType {
  /**
   * @generated from enum value: TRANSACTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TRANSACTION_TYPE_VOTE = 1;
   */
  VOTE = 1,

  /**
   * @generated from enum value: TRANSACTION_TYPE_PROPOSAL = 2;
   */
  PROPOSAL = 2,
}

/**
 * Describes the enum keysign.TransactionType.
 */
export const TransactionTypeSchema: GenEnum<TransactionType> = /*@__PURE__*/
  enumDesc(file_blockchain_specific, 0);

