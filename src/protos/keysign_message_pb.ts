// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file keysign_message.proto (package keysign, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { OneInchSwapPayload } from "./1inch_swap_payload_pb";
import { file_1inch_swap_payload } from "./1inch_swap_payload_pb";
import type { CosmosSpecific, EthereumSpecific, MAYAChainSpecific, PolkadotSpecific, SolanaSpecific, SuiSpecific, THORChainSpecific, UTXOSpecific } from "./blockchain_specific_pb";
import { file_blockchain_specific } from "./blockchain_specific_pb";
import type { Coin } from "./coin_pb";
import { file_coin } from "./coin_pb";
import type { Erc20ApprovePayload } from "./erc20_approve_payload_pb";
import { file_erc20_approve_payload } from "./erc20_approve_payload_pb";
import type { THORChainSwapPayload } from "./thorchain_swap_payload_pb";
import { file_thorchain_swap_payload } from "./thorchain_swap_payload_pb";
import type { UtxoInfo } from "./utxo_info_pb";
import { file_utxo_info } from "./utxo_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file keysign_message.proto.
 */
export const file_keysign_message: GenFile = /*@__PURE__*/
  fileDesc("ChVrZXlzaWduX21lc3NhZ2UucHJvdG8SB2tleXNpZ24ipAEKDktleXNpZ25NZXNzYWdlEhIKCnNlc3Npb25faWQYASABKAkSFAoMc2VydmljZV9uYW1lGAIgASgJEhoKEmVuY3J5cHRpb25fa2V5X2hleBgEIAEoCRIwCg9rZXlzaWduX3BheWxvYWQYBSABKAsyFy5rZXlzaWduLktleXNpZ25QYXlsb2FkEhoKEnVzZV92dWx0aXNpZ19yZWxheRgGIAEoCCK+BwoOS2V5c2lnblBheWxvYWQSGwoEY29pbhgBIAEoCzINLmtleXNpZ24uQ29pbhISCgp0b19hZGRyZXNzGAIgASgJEhEKCXRvX2Ftb3VudBgDIAEoCRIuCg11dHhvX3NwZWNpZmljGAQgASgLMhUua2V5c2lnbi5VVFhPU3BlY2lmaWNIABI2ChFldGhlcmV1bV9zcGVjaWZpYxgFIAEoCzIZLmtleXNpZ24uRXRoZXJldW1TcGVjaWZpY0gAEjgKEnRob3JjaGFpbl9zcGVjaWZpYxgGIAEoCzIaLmtleXNpZ24uVEhPUkNoYWluU3BlY2lmaWNIABIzCg1tYXlhX3NwZWNpZmljGAcgASgLMhoua2V5c2lnbi5NQVlBQ2hhaW5TcGVjaWZpY0gAEjIKD2Nvc21vc19zcGVjaWZpYxgIIAEoCzIXLmtleXNpZ24uQ29zbW9zU3BlY2lmaWNIABIyCg9zb2xhbmFfc3BlY2lmaWMYCSABKAsyFy5rZXlzaWduLlNvbGFuYVNwZWNpZmljSAASNgoRcG9sa2Fkb3Rfc3BlY2lmaWMYCiABKAsyGS5rZXlzaWduLlBvbGthZG90U3BlY2lmaWNIABIvCg9zdWljaGVfc3BlY2lmaWMYCyABKAsyFC5rZXlzaWduLlN1aVNwZWNpZmljSAASJAoJdXR4b19pbmZvGBQgAygLMhEua2V5c2lnbi5VdHhvSW5mbxIRCgRtZW1vGBUgASgJSAKIAQESPwoWdGhvcmNoYWluX3N3YXBfcGF5bG9hZBgWIAEoCzIdLmtleXNpZ24uVEhPUkNoYWluU3dhcFBheWxvYWRIARI/ChZtYXlhY2hhaW5fc3dhcF9wYXlsb2FkGBcgASgLMh0ua2V5c2lnbi5USE9SQ2hhaW5Td2FwUGF5bG9hZEgBEjsKFG9uZWluY2hfc3dhcF9wYXlsb2FkGBggASgLMhsua2V5c2lnbi5PbmVJbmNoU3dhcFBheWxvYWRIARJAChVlcmMyMF9hcHByb3ZlX3BheWxvYWQYHiABKAsyHC5rZXlzaWduLkVyYzIwQXBwcm92ZVBheWxvYWRIA4gBARIeChZ2YXVsdF9wdWJsaWNfa2V5X2VjZHNhGB8gASgJEhwKFHZhdWx0X2xvY2FsX3BhcnR5X2lkGCAgASgJQhUKE2Jsb2NrY2hhaW5fc3BlY2lmaWNCDgoMc3dhcF9wYXlsb2FkQgcKBV9tZW1vQhgKFl9lcmMyMF9hcHByb3ZlX3BheWxvYWRiBnByb3RvMw", [file_1inch_swap_payload, file_blockchain_specific, file_coin, file_erc20_approve_payload, file_thorchain_swap_payload, file_utxo_info]);

/**
 * @generated from message keysign.KeysignMessage
 */
export type KeysignMessage = Message<"keysign.KeysignMessage"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string service_name = 2;
   */
  serviceName: string;

  /**
   * @generated from field: string encryption_key_hex = 4;
   */
  encryptionKeyHex: string;

  /**
   * @generated from field: keysign.KeysignPayload keysign_payload = 5;
   */
  keysignPayload?: KeysignPayload;

  /**
   * @generated from field: bool use_vultisig_relay = 6;
   */
  useVultisigRelay: boolean;
};

/**
 * Describes the message keysign.KeysignMessage.
 * Use `create(KeysignMessageSchema)` to create a new message.
 */
export const KeysignMessageSchema: GenMessage<KeysignMessage> = /*@__PURE__*/
  messageDesc(file_keysign_message, 0);

/**
 * @generated from message keysign.KeysignPayload
 */
export type KeysignPayload = Message<"keysign.KeysignPayload"> & {
  /**
   * @generated from field: keysign.Coin coin = 1;
   */
  coin?: Coin;

  /**
   * @generated from field: string to_address = 2;
   */
  toAddress: string;

  /**
   * @generated from field: string to_amount = 3;
   */
  toAmount: string;

  /**
   * @generated from oneof keysign.KeysignPayload.blockchain_specific
   */
  blockchainSpecific: {
    /**
     * @generated from field: keysign.UTXOSpecific utxo_specific = 4;
     */
    value: UTXOSpecific;
    case: "utxoSpecific";
  } | {
    /**
     * @generated from field: keysign.EthereumSpecific ethereum_specific = 5;
     */
    value: EthereumSpecific;
    case: "ethereumSpecific";
  } | {
    /**
     * @generated from field: keysign.THORChainSpecific thorchain_specific = 6;
     */
    value: THORChainSpecific;
    case: "thorchainSpecific";
  } | {
    /**
     * @generated from field: keysign.MAYAChainSpecific maya_specific = 7;
     */
    value: MAYAChainSpecific;
    case: "mayaSpecific";
  } | {
    /**
     * @generated from field: keysign.CosmosSpecific cosmos_specific = 8;
     */
    value: CosmosSpecific;
    case: "cosmosSpecific";
  } | {
    /**
     * @generated from field: keysign.SolanaSpecific solana_specific = 9;
     */
    value: SolanaSpecific;
    case: "solanaSpecific";
  } | {
    /**
     * @generated from field: keysign.PolkadotSpecific polkadot_specific = 10;
     */
    value: PolkadotSpecific;
    case: "polkadotSpecific";
  } | {
    /**
     * @generated from field: keysign.SuiSpecific suiche_specific = 11;
     */
    value: SuiSpecific;
    case: "suicheSpecific";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated keysign.UtxoInfo utxo_info = 20;
   */
  utxoInfo: UtxoInfo[];

  /**
   * @generated from field: optional string memo = 21;
   */
  memo?: string;

  /**
   * @generated from oneof keysign.KeysignPayload.swap_payload
   */
  swapPayload: {
    /**
     * @generated from field: keysign.THORChainSwapPayload thorchain_swap_payload = 22;
     */
    value: THORChainSwapPayload;
    case: "thorchainSwapPayload";
  } | {
    /**
     * @generated from field: keysign.THORChainSwapPayload mayachain_swap_payload = 23;
     */
    value: THORChainSwapPayload;
    case: "mayachainSwapPayload";
  } | {
    /**
     * @generated from field: keysign.OneInchSwapPayload oneinch_swap_payload = 24;
     */
    value: OneInchSwapPayload;
    case: "oneinchSwapPayload";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional keysign.Erc20ApprovePayload erc20_approve_payload = 30;
   */
  erc20ApprovePayload?: Erc20ApprovePayload;

  /**
   * @generated from field: string vault_public_key_ecdsa = 31;
   */
  vaultPublicKeyEcdsa: string;

  /**
   * @generated from field: string vault_local_party_id = 32;
   */
  vaultLocalPartyId: string;
};

/**
 * Describes the message keysign.KeysignPayload.
 * Use `create(KeysignPayloadSchema)` to create a new message.
 */
export const KeysignPayloadSchema: GenMessage<KeysignPayload> = /*@__PURE__*/
  messageDesc(file_keysign_message, 1);

